{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\machi\\\\Desktop\\\\Montessori\\\\Interactive-Balance-Board-\\\\frontend\\\\src\\\\pages\\\\SystemControl.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport './SystemControl.css';\nimport SystemContext from '../SystemContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SystemControl() {\n  _s();\n  const {\n    isSystemOn,\n    toggleSystem,\n    deviceCount,\n    setDeviceCount,\n    // [NEW CODE for LED slider]\n    ledBrightness,\n    updateLedBrightness\n  } = useContext(SystemContext);\n  const [shapes, setShapes] = useState([]);\n  useEffect(() => {\n    const generatedShapes = Array.from({\n      length: 20\n    }, (_, index) => ({\n      id: index,\n      left: Math.random() * 90,\n      size: Math.random() * 30 + 20,\n      color: `rgba(${Math.floor(Math.random() * 255)},\n                          ${Math.floor(Math.random() * 255)},\n                          ${Math.floor(Math.random() * 255)}, 0.7)`,\n      shape: ['circle', 'square', 'triangle'][Math.floor(Math.random() * 3)],\n      duration: Math.random() * 5 + 5,\n      delay: Math.random() * 2\n    }));\n    setShapes(generatedShapes);\n  }, []);\n\n  // [NEW CODE for LED slider]\n  const handleSliderChange = e => {\n    updateLedBrightness(e.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"system-control-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"animated-background\",\n      children: shapes.map(shape => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `shape ${shape.shape}`,\n        style: {\n          left: `${shape.left}%`,\n          width: `${shape.size}px`,\n          height: `${shape.size}px`,\n          backgroundColor: shape.shape === 'triangle' ? 'transparent' : shape.color,\n          animationDuration: `${shape.duration}s`,\n          animationDelay: `${shape.delay}s`\n        },\n        children: shape.shape === 'triangle' && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: 0,\n            height: 0,\n            borderLeft: `${shape.size / 2}px solid transparent`,\n            borderRight: `${shape.size / 2}px solid transparent`,\n            borderBottom: `${shape.size}px solid ${shape.color}`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, shape.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: \"System Control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"System Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: `status-indicator ${isSystemOn ? 'connected' : 'disconnected'}`,\n            children: isSystemOn ? 'Connected' : 'Disconnected'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-button\",\n            onClick: toggleSystem,\n            children: isSystemOn ? 'Turn Off System' : 'Turn On System'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Connected Devices:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"plank-count\",\n            children: deviceCount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"status-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"LED Brightness:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"0\",\n            max: \"100\",\n            value: ledBrightness,\n            onChange: handleSliderChange,\n            disabled: !isSystemOn\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: ledBrightness\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_s(SystemControl, \"JSK5H5HcsqmOsoRHhMdR9RSHB10=\");\n_c = SystemControl;\nexport default SystemControl;\nvar _c;\n$RefreshReg$(_c, \"SystemControl\");","map":{"version":3,"names":["React","useEffect","useState","useContext","SystemContext","axios","jsxDEV","_jsxDEV","SystemControl","_s","isSystemOn","toggleSystem","deviceCount","setDeviceCount","ledBrightness","updateLedBrightness","shapes","setShapes","generatedShapes","Array","from","length","_","index","id","left","Math","random","size","color","floor","shape","duration","delay","handleSliderChange","e","target","value","className","children","map","style","width","height","backgroundColor","animationDuration","animationDelay","borderLeft","borderRight","borderBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","min","max","onChange","disabled","_c","$RefreshReg$"],"sources":["C:/Users/machi/Desktop/Montessori/Interactive-Balance-Board-/frontend/src/pages/SystemControl.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\r\nimport './SystemControl.css';\r\nimport SystemContext from '../SystemContext';\r\nimport axios from 'axios';\r\n\r\nfunction SystemControl() {\r\n  const {\r\n    isSystemOn,\r\n    toggleSystem,\r\n    deviceCount,\r\n    setDeviceCount,\r\n    // [NEW CODE for LED slider]\r\n    ledBrightness,\r\n    updateLedBrightness\r\n  } = useContext(SystemContext);\r\n  const [shapes, setShapes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const generatedShapes = Array.from({ length: 20 }, (_, index) => ({\r\n      id: index,\r\n      left: Math.random() * 90,\r\n      size: Math.random() * 30 + 20,\r\n      color: `rgba(${Math.floor(Math.random() * 255)},\r\n                          ${Math.floor(Math.random() * 255)},\r\n                          ${Math.floor(Math.random() * 255)}, 0.7)`,\r\n      shape: ['circle', 'square', 'triangle'][Math.floor(Math.random() * 3)],\r\n      duration: Math.random() * 5 + 5,\r\n      delay: Math.random() * 2,\r\n    }));\r\n    setShapes(generatedShapes);\r\n  }, []);\r\n\r\n  // [NEW CODE for LED slider]\r\n  const handleSliderChange = (e) => {\r\n    updateLedBrightness(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"system-control-container\">\r\n      {/* Falling Shapes Background */}\r\n      <div className=\"animated-background\">\r\n        {shapes.map((shape) => (\r\n          <div\r\n            key={shape.id}\r\n            className={`shape ${shape.shape}`}\r\n            style={{\r\n              left: `${shape.left}%`,\r\n              width: `${shape.size}px`,\r\n              height: `${shape.size}px`,\r\n              backgroundColor:\r\n                shape.shape === 'triangle' ? 'transparent' : shape.color,\r\n              animationDuration: `${shape.duration}s`,\r\n              animationDelay: `${shape.delay}s`,\r\n            }}\r\n          >\r\n            {shape.shape === 'triangle' && (\r\n              <div\r\n                style={{\r\n                  width: 0,\r\n                  height: 0,\r\n                  borderLeft: `${shape.size / 2}px solid transparent`,\r\n                  borderRight: `${shape.size / 2}px solid transparent`,\r\n                  borderBottom: `${shape.size}px solid ${shape.color}`,\r\n                }}\r\n              ></div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Dashboard */}\r\n      <div className=\"dashboard\">\r\n        <h1 className=\"title\">System Control</h1>\r\n        <div className=\"status-section\">\r\n          <div className=\"status-item\">\r\n            <h3>System Status:</h3>\r\n            <p\r\n              className={`status-indicator ${\r\n                isSystemOn ? 'connected' : 'disconnected'\r\n              }`}\r\n            >\r\n              {isSystemOn ? 'Connected' : 'Disconnected'}\r\n            </p>\r\n            <button className=\"control-button\" onClick={toggleSystem}>\r\n              {isSystemOn ? 'Turn Off System' : 'Turn On System'}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"status-item\">\r\n            <h3>Connected Devices:</h3>\r\n            <p className=\"plank-count\">{deviceCount}</p>\r\n          </div>\r\n\r\n          {/* [REMOVED CODE for LED on/off] Removed LED Master Control button */}\r\n\r\n          {/* [NEW CODE for LED slider] */}\r\n          <div className=\"status-item\">\r\n            <h3>LED Brightness:</h3>\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={ledBrightness}\r\n              onChange={handleSliderChange}\r\n              disabled={!isSystemOn}\r\n            />\r\n            <span>{ledBrightness}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SystemControl;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}